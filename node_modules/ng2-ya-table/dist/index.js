import { Component, Directive, HostListener, Injectable, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { PaginationModule } from 'ngx-bootstrap';
import { DomSanitizer } from '@angular/platform-browser';
import { Subject } from 'rxjs/Subject';
import 'rxjs/add/operator/debounceTime';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { Observable } from 'rxjs/Observable';
import 'rxjs/add/observable/of';
import 'rxjs/Rx';

var Languages = {
    en: {
        processing: "Processing...",
        search: "Search:",
        lengthMenu: "Show  _MENU_ entries",
        info: "Showing _START_ to _END_ of _TOTAL_ entries",
        pagination: {
            first: "First",
            previous: "Previous",
            next: "Next",
            last: "Last"
        }
    },
    it: {
        processing: "Elaborazione...",
        search: "Cerca:",
        lengthMenu: "Visualizza _MENU_ elementi",
        info: "Visualizzati da _START_ a _END_ di _TOTAL_ elementi",
        pagination: {
            first: "Inizio",
            previous: "Precedente",
            next: "Successivo",
            last: "Fine"
        }
    }
};

var sortCycle = ['asc', 'desc', null];
var getNextSortOrder = function (currentSortOrder) {
    var /** @type {?} */ nextIndex = (sortCycle.indexOf(currentSortOrder) + 1) % sortCycle.length;
    return sortCycle[nextIndex];
};
var Ng2YaTableService = (function () {
    function Ng2YaTableService() {
        this.stateChangedSource = new BehaviorSubject(this);
        this.showFilterRow = false;
        this.orderMulti = true;
        this.sortStack = [];
        this.language = null;
        this.stateChanged$ = this.stateChangedSource.asObservable();
    }
    /**
     * @param {?} options
     * @return {?}
     */
    Ng2YaTableService.prototype.setOptions = function (options) {
        this.orderMulti = !!options.orderMulti ? options.orderMulti : true;
        this.language = typeof options.language === "string" ? Languages[options.language] : options.language;
    };
    /**
     * @param {?} columns
     * @return {?}
     */
    Ng2YaTableService.prototype.setColumns = function (columns) {
        var _this = this;
        this.columns = columns.map(function (c) {
            if (!!c.filter) {
                _this.showFilterRow = true;
            }
            var /** @type {?} */ column = {
                filterValue: null,
                sortOrder: c.defaultSortOrder,
                def: c,
                hasSort: c.sort,
                hasFilter: !!c.filter
            };
            if (!!column.sortOrder) {
                _this.sortStack.push(column);
            }
            return column;
        });
    };
    /**
     * @param {?} paging
     * @return {?}
     */
    Ng2YaTableService.prototype.setPaging = function (paging) {
        this.paging = {
            currentPage: 1,
            itemsPerPage: paging.itemsPerPage,
            recordsTotal: 0,
            recordsFiltered: 0
        };
    };
    /**
     * @param {?} colState
     * @param {?} orderMulti
     * @return {?}
     */
    Ng2YaTableService.prototype.toggleSort = function (colState, orderMulti) {
        colState.sortOrder = getNextSortOrder(colState.sortOrder);
        if (orderMulti) {
            var /** @type {?} */ curIndex = this.sortStack.indexOf(colState);
            if (curIndex === -1) {
                this.sortStack.push(colState);
            }
            else if (!colState.sortOrder) {
                this.sortStack.splice(curIndex, 1);
            }
        }
        else {
            this.sortStack = colState.sortOrder ? [colState] : [];
            this.columns.forEach(function (column) {
                if (column !== colState) {
                    column.sortOrder = null;
                }
            });
        }
        this.notify();
    };
    /**
     * @param {?} page
     * @param {?} itemsPerPage
     * @return {?}
     */
    Ng2YaTableService.prototype.changePaging = function (page, itemsPerPage) {
        this.paging.currentPage = page;
        this.paging.itemsPerPage = itemsPerPage;
        this.notify();
    };
    /**
     * @param {?} column
     * @return {?}
     */
    Ng2YaTableService.prototype.changeFilter = function (column) {
        this.paging.currentPage = 1;
        this.notify();
    };
    /**
     * @return {?}
     */
    Ng2YaTableService.prototype.notify = function () {
        this.stateChangedSource.next(this);
    };
    return Ng2YaTableService;
}());
Ng2YaTableService.decorators = [
    { type: Injectable },
];
/**
 * @nocollapse
 */
Ng2YaTableService.ctorParameters = function () { return []; };

var Ng2YaTableLocalDataSource = (function () {
    /**
     * @param {?=} data
     */
    function Ng2YaTableLocalDataSource(data) {
        if (data === void 0) { data = []; }
        this.data = [];
        this.defaultTextFilter = function (value, search) {
            return value.toString().toLowerCase().includes(search.toString().toLowerCase());
        };
        this.data = data;
    }
    /**
     * @param {?} request
     * @return {?}
     */
    Ng2YaTableLocalDataSource.prototype.asObservable = function (request) {
        var _this = this;
        var /** @type {?} */ filteredData = this.data;
        var /** @type {?} */ defaultFilterColumns = request.filters.filter(function (p) { return p.type === 'default' || p.type === 'text'; });
        var /** @type {?} */ page = (request.start / request.length) + 1;
        if (request.fullTextFilter && defaultFilterColumns.length > 0) {
            filteredData = filteredData.filter(function (item) {
                var /** @type {?} */ rowResult = false;
                defaultFilterColumns.forEach(function (column) {
                    var /** @type {?} */ value = typeof item[column.name] === 'undefined' || item[column.name] === null ? '' : item[column.name];
                    var /** @type {?} */ result = _this.defaultTextFilter.call(null, value, request.fullTextFilter);
                    if (result === true) {
                        rowResult = true;
                    }
                });
                return rowResult;
            });
        }
        defaultFilterColumns.forEach(function (column) {
            if (column.value) {
                filteredData = filteredData.filter(function (el) {
                    var /** @type {?} */ value = typeof el[column.name] === 'undefined' || el[column.name] === null ? '' : el[column.name];
                    return _this.defaultTextFilter.call(null, value, column.value);
                });
            }
        });
        request.orders.forEach(function (column) {
            var /** @type {?} */ dir = (column.dir === 'asc') ? 1 : -1;
            var /** @type {?} */ compare = function (direction, a, b) {
                if (a < b) {
                    return -1 * direction;
                }
                if (a > b) {
                    return direction;
                }
                return 0;
            };
            filteredData = filteredData.sort(function (a, b) {
                return compare.call(null, dir, a[column.name], b[column.name]);
            });
        });
        return Observable.of({
            recordsTotal: this.data.length,
            recordsFiltered: filteredData.length,
            data: filteredData.slice(request.length * (page - 1), request.length * page)
        });
    };
    return Ng2YaTableLocalDataSource;
}());

var Ng2YaTableComponent = (function () {
    /**
     * @param {?} sanitizer
     * @param {?} state
     */
    function Ng2YaTableComponent(sanitizer, state) {
        var _this = this;
        this.sanitizer = sanitizer;
        this.state = state;
        this.fullTextFilterValueChanged = new Subject();
        this.processing = false;
        this.options = null;
        this.rows = [];
        this.datasource = null;
        this.columns = [];
        this.paging = null;
        this.fullTextFilterValueChanged
            .debounceTime(300)
            .distinctUntilChanged()
            .subscribe(function (filterValue) { return _this.onChangeTable(); });
    }
    /**
     * @return {?}
     */
    Ng2YaTableComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.subscription = this.state.stateChanged$.subscribe(function () { return _this.onChangeTable(); });
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    Ng2YaTableComponent.prototype.ngOnChanges = function (changes) {
        if (changes.options && changes.options.isFirstChange()) {
            this.state.setOptions(changes.options.currentValue);
        }
        if (changes.paging && changes.paging.isFirstChange()) {
            this.state.setPaging(changes.paging.currentValue);
        }
        if (changes.columns && changes.columns.isFirstChange()) {
            this.state.setColumns(changes.columns.currentValue);
        }
        if (changes.datasource && !changes.datasource.isFirstChange()) {
            this.onChangeTable();
        }
    };
    /**
     * @return {?}
     */
    Ng2YaTableComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    /**
     * @param {?} html
     * @return {?}
     */
    Ng2YaTableComponent.prototype.sanitize = function (html) {
        return this.sanitizer.bypassSecurityTrustHtml(html);
    };
    /**
     * @return {?}
     */
    Ng2YaTableComponent.prototype.onChangeTable = function () {
        var _this = this;
        if (this.datasource) {
            this.processing = true;
            var /** @type {?} */ orders_1 = new Array();
            this.state.sortStack.forEach(function (column) {
                var /** @type {?} */ order = {
                    dir: column.sortOrder,
                    name: column.def.name
                };
                orders_1.push(order);
            });
            var /** @type {?} */ filters_1 = new Array();
            this.state.columns.forEach(function (column) {
                if (column.hasFilter) {
                    var /** @type {?} */ filter = {
                        name: column.def.name,
                        type: column.def.filter.type,
                        value: column.filterValue
                    };
                    filters_1.push(filter);
                }
            });
            var /** @type {?} */ request = {
                start: (this.state.paging.currentPage - 1) * this.state.paging.itemsPerPage,
                length: this.state.paging.itemsPerPage,
                filters: filters_1,
                orders: orders_1,
                fullTextFilter: this.state.fullTextFilter
            };
            var /** @type {?} */ observable = null;
            if (this.datasource instanceof Array) {
                observable = new Ng2YaTableLocalDataSource(this.datasource).asObservable(request);
            }
            else {
                observable = this.datasource(request);
            }
            observable.subscribe(function (result) {
                _this.rows = result.data;
                _this.state.paging.recordsFiltered = result.recordsFiltered;
                _this.state.paging.recordsTotal = result.recordsTotal;
            }, function (error) {
                console.log(error);
            }, function () {
                _this.processing = false;
            });
        }
    };
    /**
     * @param {?} row
     * @param {?} column
     * @return {?}
     */
    Ng2YaTableComponent.prototype.getHtml = function (row, column) {
        if (column.render) {
            var /** @type {?} */ data = this.getData(row, column.name);
            return column.render(data, row);
        }
        return this.getData(row, column.name);
    };
    /**
     * @param {?} row
     * @param {?} propertyName
     * @return {?}
     */
    Ng2YaTableComponent.prototype.getData = function (row, propertyName) {
        return propertyName.split('.').reduce(function (prev, curr) { return prev[curr]; }, row);
    };
    /**
     * @param {?} row
     * @param {?} column
     * @return {?}
     */
    Ng2YaTableComponent.prototype.cellClick = function (row, column) {
        if (column.action) {
            var /** @type {?} */ data = this.getData(row, column.name);
            column.action(data, row);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    Ng2YaTableComponent.prototype.onFullTextFilterValueChange = function (event) {
        this.fullTextFilterValueChanged.next(event);
    };
    return Ng2YaTableComponent;
}());
Ng2YaTableComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng2-ya-table',
                template: "\n    <div class=\"ng2-ya-table_wrapper form-inline dt-bootstrap no-footer\">\n      <div class=\"row col-12\">\n        <div class=\"col-md-6\">\n          <div class=\"ng2-ya-table_length\">\n            <label>\n              <span *ngFor=\"let s of state.language.lengthMenu.split(' ')\">\n                <span [ngSwitch]=\"s\">\n                  <select *ngSwitchCase=\"'_MENU_'\" class=\"form-control input-sm\" [(ngModel)]=\"state.paging.itemsPerPage\" (change)=\"state.changePaging(1, $event.target.value)\">\n                    <option *ngFor=\"let pn of paging.itemsPerPageOptions\" [value]=\"pn\">{{pn}}</option>\n                  </select>\n                  <span *ngSwitchDefault>{{s}}</span>\n                </span>\n              </span>\n            </label>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"ng2-ya-table_filter\">\n            <label>\n              <span>{{state.language.search}}</span>\n              <input type=\"search\" class=\"form-control input-sm\"\n                [(ngModel)]=\"state.fullTextFilter\"\n                (ngModelChange)=\"onFullTextFilterValueChange($event)\"/>\n            </label>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row col-12\">\n        <div class=\"col-md-12\">\n          <div *ngIf=\"processing\" class=\"ng2-ya-table_processing panel panel-default\">{{state.language.processing}}</div>\n          <table class=\"table ng2-ya-table no-footer\" ngClass=\"{{options.className || ''}}\" role=\"grid\" style=\"width: 100%;\">\n            <thead>\n              <tr role=\"row\">\n                <th *ngFor=\"let column of state.columns\" \n                  [style.width]=\"column.def.width\"\n                  [ngClass]=\"{'sorting_desc': column.sortOrder === 'desc', 'sorting_asc': column.sortOrder === 'asc', 'sorting': column.hasSort }\"\n                  [ngTableSorting]=\"column\">\n                  {{column.def.title}}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngIf=\"state.showFilterRow\">\n                <td *ngFor=\"let column of state.columns\">\n                  <div *ngIf=\"column.def.filter\" [ngSwitch]=\"column.def.filter.controlType\">\n                    <ng2-ya-table-filter-list *ngSwitchCase=\"'list'\" [column]=\"column\"></ng2-ya-table-filter-list>\n                    <ng2-ya-table-filter-default *ngSwitchDefault [column]=\"column\"></ng2-ya-table-filter-default>\n                  </div>\n                </td>\n              </tr>\n              <tr *ngFor=\"let row of rows\">\n                <td (click)=\"cellClick(row, column)\" *ngFor=\"let column of columns\" [innerHtml]=\"sanitize(getHtml(row, column))\"></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"row col-12\">\n        <div class=\"col-md-6\">\n          <div *ngIf=\"rows.length > 0\" class=\"ng2-ya-table_info\" role=\"status\">\n            <span *ngFor=\"let s of state.language.info.split(' ')\">\n              <span [ngSwitch]=\"s\">\n                <span *ngSwitchCase=\"'_START_'\">{{(state.paging.currentPage - 1) * state.paging.itemsPerPage + 1}}</span>\n                <span *ngSwitchCase=\"'_END_'\">{{(state.paging.currentPage - 1) * state.paging.itemsPerPage + rows.length}}</span>\n                <span *ngSwitchCase=\"'_TOTAL_'\">{{state.paging.recordsFiltered}}</span>\n                <span *ngSwitchDefault>{{s}}</span>\n              </span>\n            </span>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"ng2-ya-table_paginate paging_simple_numbers\">\n            <pagination *ngIf=\"rows.length > 0\"\n              [(ngModel)]=\"state.paging.currentPage\"\n              [totalItems]=\"state.paging.recordsFiltered\"\n              [itemsPerPage]=\"state.paging.itemsPerPage\"\n              [maxSize]=\"paging.maxSize\"\n              [boundaryLinks]=\"false\"\n              [rotate]=\"false\"\n              (pageChanged)=\"state.changePaging($event.page, $event.itemsPerPage)\"\n              [firstText] = \"state.language.pagination.first\"\n              [lastText] = \"state.language.pagination.last\"\n              [nextText] = \"state.language.pagination.next\"\n              [previousText] = \"state.language.pagination.previous\">\n            </pagination>\n          </div>\n        </div>\n      </div>\n    </div>",
                styles: [
                    "table.ng2-ya-table {\n      clear: both;\n      margin-top: 6px !important;\n      margin-bottom: 6px !important;\n      max-width: none !important;\n      border-collapse: separate !important;\n    }",
                    "table.ng2-ya-table td,\n    table.ng2-ya-table th {\n      -webkit-box-sizing: content-box;\n      box-sizing: content-box;\n    }",
                    "table.ng2-ya-table td.ng2-ya-table_empty,\n    table.ng2-ya-table th.ng2-ya-table_empty {\n      text-align: center;\n    }",
                    "table.ng2-ya-table.nowrap th,\n    table.ng2-ya-table.nowrap td {\n      white-space: nowrap;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_length label {\n      font-weight: normal;\n      text-align: left;\n      white-space: nowrap;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_length select {\n      width: 75px;\n      display: inline-block;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_filter {\n      text-align: right;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_filter label {\n      font-weight: normal;\n      white-space: nowrap;\n      text-align: left;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_filter input {\n      margin-left: 0.5em;\n      display: inline-block;\n      width: auto;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_info {\n      padding-top: 8px;\n      white-space: nowrap;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_paginate {\n      margin: 0;\n      white-space: nowrap;\n      text-align: right;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_paginate ul.pagination {\n      margin: 2px 0;\n      white-space: nowrap;\n    }",
                    "div.ng2-ya-table_wrapper div.ng2-ya-table_processing {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      width: 200px;\n      margin-left: -100px;\n      margin-top: -26px;\n      text-align: center;\n      padding: 1em 0;\n    }",
                    "table.ng2-ya-table thead > tr > th.sorting_asc, \n    table.ng2-ya-table thead > tr > th.sorting_desc, \n    table.ng2-ya-table thead > tr > th.sorting,\n    table.ng2-ya-table thead > tr > td.sorting_asc,\n    table.ng2-ya-table thead > tr > td.sorting_desc,\n    table.ng2-ya-table thead > tr > td.sorting {\n      padding-right: 30px;\n    }",
                    "table.ng2-ya-table thead > tr > th:active,\n    table.ng2-ya-table thead > tr > td:active {\n      outline: none;\n    }",
                    "table.ng2-ya-table thead .sorting,\n    table.ng2-ya-table thead .sorting_asc,\n    table.ng2-ya-table thead .sorting_desc,\n    table.ng2-ya-table thead .sorting_asc_disabled,\n    table.ng2-ya-table thead .sorting_desc_disabled {\n      cursor: pointer;\n      position: relative;\n    }",
                    "table.ng2-ya-table thead .sorting:after,\n    table.ng2-ya-table thead .sorting_asc:after,\n    table.ng2-ya-table thead .sorting_desc:after,\n    table.ng2-ya-table thead .sorting_asc_disabled:after,\n    table.ng2-ya-table thead .sorting_desc_disabled:after {\n      position: absolute;\n      bottom: 8px;\n      right: 8px;\n      display: block;\n      font-family: 'Glyphicons Halflings';\n      opacity: 0.5;\n    }",
                    "table.ng2-ya-table thead .sorting:after {\n      opacity: 0.2;\n      content: \"\\e150\";\n      /* sort */\n    }",
                    "table.ng2-ya-table thead .sorting_asc:after {\n      content: \"\\e155\";\n      /* sort-by-attributes */\n    }",
                    "table.ng2-ya-table thead .sorting_desc:after {\n      content: \"\\e156\";\n      /* sort-by-attributes-alt */\n    }",
                    "table.ng2-ya-table thead .sorting_asc_disabled:after,\n    table.ng2-ya-table thead .sorting_desc_disabled:after {\n      color: #eee;\n    }",
                    "@media screen and (max-width: 767px) {\n      div.ng2-ya-table_wrapper div.ng2-ya-table_length,\n      div.ng2-ya-table_wrapper div.ng2-ya-table_filter,\n      div.ng2-ya-table_wrapper div.ng2-ya-table_info,\n      div.ng2-ya-table_wrapper div.ng2-ya-table_paginate {\n        text-align: center;\n      }\n    }"
                ],
                providers: [Ng2YaTableService]
            },] },
];
/**
 * @nocollapse
 */
Ng2YaTableComponent.ctorParameters = function () { return [
    { type: DomSanitizer, },
    { type: Ng2YaTableService, },
]; };
Ng2YaTableComponent.propDecorators = {
    'options': [{ type: Input },],
    'rows': [{ type: Input },],
    'datasource': [{ type: Input },],
    'columns': [{ type: Input },],
    'paging': [{ type: Input },],
};

var Ng2YaTableSortingDirective = (function () {
    /**
     * @param {?} state
     */
    function Ng2YaTableSortingDirective(state) {
        this.state = state;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    Ng2YaTableSortingDirective.prototype.onToggleSort = function (event) {
        if (event) {
            event.preventDefault();
        }
        this.state.toggleSort(this.column, event.shiftKey && this.state.orderMulti);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    Ng2YaTableSortingDirective.prototype.onDisableMouseDown = function (event) {
        if (event) {
            event.preventDefault();
        }
    };
    return Ng2YaTableSortingDirective;
}());
Ng2YaTableSortingDirective.decorators = [
    { type: Directive, args: [{ selector: '[ngTableSorting]' },] },
];
/**
 * @nocollapse
 */
Ng2YaTableSortingDirective.ctorParameters = function () { return [
    { type: Ng2YaTableService, },
]; };
Ng2YaTableSortingDirective.propDecorators = {
    'column': [{ type: Input, args: ['ngTableSorting',] },],
    'onToggleSort': [{ type: HostListener, args: ['click', ['$event'],] },],
    'onDisableMouseDown': [{ type: HostListener, args: ['mousedown', ['$event'],] },],
};

var Ng2YaTableFilteringDefaultComponent = (function () {
    /**
     * @param {?} state
     */
    function Ng2YaTableFilteringDefaultComponent(state) {
        var _this = this;
        this.state = state;
        this.filterValueChanged = new Subject();
        this.filterValueChanged
            .debounceTime(300)
            .distinctUntilChanged()
            .subscribe(function (filterValue) { return _this.state.changeFilter(_this.column); });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    Ng2YaTableFilteringDefaultComponent.prototype.onFilterValueChange = function (event) {
        this.filterValueChanged.next(event);
    };
    return Ng2YaTableFilteringDefaultComponent;
}());
Ng2YaTableFilteringDefaultComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng2-ya-table-filter-default',
                template: "\n    <input class=\"form-control\" style=\"width: 100%\"\n      [attr.type]=\"column.def.filter.config && column.def.filter.config.type ? column.def.filter.config.type : 'text'\"\n      [attr.placeholder]=\"column.def.filter.config && column.def.filter.config.placeholder ? column.def.filter.config.placeholder : ''\"\n      [attr.max]=\"column.def.filter.config && column.def.filter.config.max ? column.def.filter.config.max : 524288\"\n      [attr.min]=\"column.def.filter.config && column.def.filter.config.min ? column.def.filter.config.min : 0\"\n      [attr.step]=\"column.def.filter.config && column.def.filter.config.step ? column.def.filter.config.step : 1\"\n      [(ngModel)]=\"column.filterValue\"\n      (ngModelChange)=\"onFilterValueChange($event)\" />"
            },] },
];
/**
 * @nocollapse
 */
Ng2YaTableFilteringDefaultComponent.ctorParameters = function () { return [
    { type: Ng2YaTableService, },
]; };
Ng2YaTableFilteringDefaultComponent.propDecorators = {
    'column': [{ type: Input },],
};

var Ng2YaTableFilteringListComponent = (function () {
    /**
     * @param {?} state
     */
    function Ng2YaTableFilteringListComponent(state) {
        this.state = state;
    }
    return Ng2YaTableFilteringListComponent;
}());
Ng2YaTableFilteringListComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng2-ya-table-filter-list',
                template: "\n    <select class=\"form-control\" style=\"width: 100%\"\n        [(ngModel)]=\"column.filterValue\"\n        (ngModelChange)=\"state.changeFilter(column)\">\n          <option value=\"\">{{ column.def.filter.config.nullText }}</option>\n          <option *ngFor=\"let item of column.def.filter.config.list\" [value]=\"item.value\">{{item.text}}</option>\n    </select>"
            },] },
];
/**
 * @nocollapse
 */
Ng2YaTableFilteringListComponent.ctorParameters = function () { return [
    { type: Ng2YaTableService, },
]; };
Ng2YaTableFilteringListComponent.propDecorators = {
    'column': [{ type: Input },],
};

var NG2_YA_TABLE_DIRECTIVES = [Ng2YaTableComponent, Ng2YaTableFilteringDefaultComponent, Ng2YaTableFilteringListComponent, Ng2YaTableSortingDirective];

var Ng2YaTableModule = (function () {
    function Ng2YaTableModule() {
    }
    /**
     * @return {?}
     */
    Ng2YaTableModule.forRoot = function () {
        return {
            ngModule: Ng2YaTableModule,
            providers: [Ng2YaTableService]
        };
    };
    return Ng2YaTableModule;
}());
Ng2YaTableModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    PaginationModule.forRoot(),
                ],
                declarations: [
                    NG2_YA_TABLE_DIRECTIVES
                ],
                exports: [
                    NG2_YA_TABLE_DIRECTIVES
                ]
            },] },
];
/**
 * @nocollapse
 */
Ng2YaTableModule.ctorParameters = function () { return []; };

export { Ng2YaTableModule };
